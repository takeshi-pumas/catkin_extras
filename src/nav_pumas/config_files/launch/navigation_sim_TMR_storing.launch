<launch>  
 <remap from="/static_map" to="/get_distance_map"/>
 <remap from="/laser_2d_pose" to= "/global_pose"/>
 <param name="log_level" value="error"/> 
 
  <!--node name="killer_node" pkg="killer_node" type="killer_node.py" output="screen"/-->
  <!--node name="fake_global_pose" pkg="killer_node" type="fake_global_pose.py" output="screen"/-->
  

  <!--arg name="static_map_file"       default="$(find config_files)/prohibition_maps/robocup_2023/map.yaml"/-->
  <!--arg name="prohibition_map_file"  default="$(find config_files)/prohibition_maps/robocup_2023/map.yaml"/-->
  <arg name="static_map_file"       default="$(find config_files)/prohibition_maps/TMR_2025/map.yaml"/>
  <arg name="prohibition_map_file"  default="$(find config_files)/prohibition_maps/TMR_2025/map.yaml"/>
  <arg name="initial_pose_x" default="8.0"/>
  <arg name="initial_pose_y" default="0.0"/>
  <arg name="initial_pose_a" default="3.1416"/>
  <arg name="laser_scan_topic" default="/hsrb/base_scan/"/>
  <arg name="point_cloud_topic" default="/hsrb/head_rgbd_sensor/depth_registered/rectified_points"/>
  <arg name="use_lidar" default="True"/>
  <arg name="use_sonars" default="False"/>
  <arg name="use_point_cloud" default="True"/>
  <arg name="cloud_downsampling" default="9"/>
  <arg name="lidar_downsampling" default="2"/>
  <arg name="cloud_points_threshold" default="100"/>
  <arg name="lidar_points_threshold" default="20"/>
  <arg name="cmd_vel_name" default="/hsrb/command_velocity"/>


  <node name="path_planner" pkg="path_planner" type="path_planner_node" output="screen">
    <param name="diagonal_paths" value="False"/>
  </node>
  
  <node name="simple_move"  pkg="simple_move"  type="simple_move_node"  output="screen">
    <param name="max_linear_speed" value="0.8"/>
    <param name="max_angular_speed" value="1.5"/>
    <param name="control_alpha" value="0.4"/>
    <param name="control_beta" value="0.15"/>
    <param name="cmd_vel_name" value="$(arg cmd_vel_name)"/>
  </node>

  <node name="obs_detector"  pkg="obstacle_detector"  type="obs_detect_node"  output="screen">
    <param name="laser_scan_topic" value="$(arg laser_scan_topic)"/>
    <param name="use_lidar" value="$(arg use_lidar)"/>
    <param name="use_sonars" value="$(arg use_sonars)"/>
    <param name="use_point_cloud" value="$(arg use_point_cloud)"/>
    <param name="use_point_cloud2" value="False"/>
    <param name="point_cloud_topic" value="$(arg point_cloud_topic)"/>
    <param name="laser_scan_topic" value="$(arg laser_scan_topic)"/>
    <param name="cloud_downsampling" value="$(arg cloud_downsampling)"/>
    <param name="lidar_points_threshold" value="$(arg lidar_points_threshold)"/>
    <param name="cloud_points_threshold" value="$(arg cloud_points_threshold)"/>
    <param name="obs_detector_debug" value="False"/>
    <param name="min_z" value="0.05"/>
    <!--###agregar mins y max-->
  </node>

  <node name="map_augmenter"  pkg="map_augmenter"  type="map_augmenter_node"  output="screen">
    <param name="use_lidar" value="$(arg use_lidar)"/>
    <param name="use_sonars" value="False"/>
    <param name="use_point_cloud" value="$(arg use_point_cloud)"/>
    <param name="use_point_cloud2" value="False"/>
    <param name="point_cloud_topic" value="$(arg point_cloud_topic)"/>
    <param name="laser_scan_topic" value="$(arg laser_scan_topic)"/>
    <param name="cloud_downsampling" value="$(arg cloud_downsampling)"/>
    <param name="inflation_radius" value="0.05"/>
    <param name="cost_radius" value="0.5"/>
    <!--###decay_factor-->

  </node>

  <node name="mvn_pln"  pkg="mvn_pln"  type="mvn_pln_node"  output="screen">
    <remap from="/nav_control/goal" to="/move_base_simple/goal"/>
    <param name="patience" value="True"/>
  </node>

  <node name="prohibition_map_server" pkg="map_server" type="map_server" output="screen" args="$(arg prohibition_map_file)">
    <remap from="/static_map" to="/prohibition_map"/>
    <remap from="/map" to="/prohibition_layer_map"/>
  </node>
 
  <node name="map_server" pkg="map_server" type="map_server" output="screen" args="$(arg static_map_file)"/>

  
<!--##########################################################################################################-->

  <param name="file_name" value="/known_locations_storingTMR.yaml"/>
  <node pkg="hmm_navigation"  name="pumas_nav" type="pumas_nav.py" output="screen" />
  <node pkg="known_locations_tf_server"  name="known_locs" type="known_locs_node.py" output="screen" />
  <node pkg="object_classification"  name="objs_reco" type="classification_server.py"  />  
  <node pkg="segmentation"  name="segmentation" type="segment_node.py"  />  
  <node pkg="segmentation"  name="placing_finder" type="placing_finder_node.py"  />  
  <node pkg="human_detector"  name="human_detector" type="pointing_detector_server.py"/>  
  <node pkg="leg_finder"  name="leg_finder_node" type="leg_finder_node"/>  
  <node pkg="human_follower"  name="human_follower_node" type="human_follower_node"/>  
  <node pkg="point_cloud"  name="point_cloud_filter_node" type="passthrough_filter"/>  
  <!--node pkg="action_server"  name="action_server_pick" type="ACT_SRVR_grasp.py"/-->
  <node pkg="action_server"  name="action_server_pick" type="ACT_SRVR_grasp_mio.py"/>
  <node pkg="action_server"  name="action_server_place" type="ACT_SRVR_place.py"/>   
  <node pkg="smach_viewer"  name="smach_viewer" type="smach_viewer.py"  />  
  

  <include file="$(find hsrb_moveit_config)/launch/hsrb_demo_with_controller.launch"> 
  <arg name="use_gui" value="true"/> 
</include>
<!--##########################################################################################################-->


  
    
  
</launch>
